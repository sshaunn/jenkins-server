FROM ubuntu:24.04

ARG REPO_URL
ENV GIT_URL_DOCKER_IMAGE_JENKINS=${REPO_URL}
ARG BRANCH_NAME
ENV GIT_BRANCH_DOCKER_IMAGE_JENKINS=${BRANCH_NAME}
ARG GIT_COMMIT
ENV GIT_COMMIT_DOCKER_IMAGE_JENKINS=${GIT_COMMIT}
ARG GITHUB_USERNAME
ENV GITHUB_USERNAME=${GITHUB_USERNAME}
LABEL git-commit=${GIT_COMMIT}

ARG JENKINS_VERSION
ENV JENKINS_VERSION=${JENKINS_VERSION:-2.462.1-lts}

ENV JENKINS_CONFIG_HOME=/var/jenkins_home

RUN mkdir -p ${JENKINS_CONFIG_HOME}

RUN apt-get update && apt-get install -y \
    libarchive-tools \
    git \
    openssh-client \
    openssl \
    openjdk-11-jdk \
    curl \
    wget \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release \
    sudo \
    make \
    apt-utils \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install -y \
    docker-ce \
    docker-ce-cli \
    containerd.io \
    docker-buildx-plugin \
    docker-compose-plugin \
    && curl -OL https://golang.org/dl/go1.22.7.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf go1.22.7.linux-amd64.tar.gz \
    && rm go1.22.7.linux-amd64.tar.gz \
    && curl -fsSL https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.12.11/jenkins-plugin-manager-2.12.11.jar -o /usr/local/bin/jenkins-plugin-cli.jar \
    && echo '#!/bin/sh\njava -jar /usr/local/bin/jenkins-plugin-cli.jar "$@"' > /usr/local/bin/jenkins-plugin-cli \
    && chmod +x /usr/local/bin/jenkins-plugin-cli \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ARG user=jenkins
ARG group=jenkins
ARG uid=10000
ARG gid=10000
ARG http_port=8088
ARG agent_port=50000
ARG JENKINS_HOME=/var/jenkins_home

ENV JENKINS_HOME ${JENKINS_HOME}
ENV JENKINS_SLAVE_AGENT_PORT ${agent_port}

RUN mkdir -p ${JENKINS_HOME} \
    && chown ${uid}:${gid} ${JENKINS_HOME} ${JENKINS_CONFIG_HOME} \
    && groupadd -g ${gid} ${group} \
    && useradd -d ${JENKINS_HOME} -u ${uid} -g ${gid} -m -s /bin/bash ${user}
WORKDIR ${JENKINS_HOME}

VOLUME ${JENKINS_HOME}

ENV JAVA_OPTS="-Dorg.apache.commons.jelly.tags.fmt.timeZone=Australia/Melbourne -Djenkins.install.runSetupWizard=false"
RUN ln -sf /usr/share/zoneinfo/Australia/Melbourne /etc/localtime

COPY --chown=1000:1000 jenkins.yaml ${JENKINS_CONFIG_HOME}/jenkins.yaml
ENV CASC_JENKINS_CONFIG=${JENKINS_CONFIG_HOME}/jenkins.yaml
COPY --chown=1000:1000 plugins.txt /usr/share/jenkins/ref/plugins.txt
RUN chown ${uid}:${gid} ${JENKINS_CONFIG_HOME}

COPY --chown=1000:1000 config.xml /usr/share/jenkins/ref/config.xml
COPY --chown=1000:1000 init.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy

ENV JENKINS_UC=https://updates.jenkins.io
RUN chown -R ${user} ${JENKINS_HOME} /usr/share/jenkins/ref

EXPOSE ${http_port}
EXPOSE ${agent_port}

ENV COPY_REFERENCE_FILE_LOG ${JENKINS_HOME}/copy_reference_file.log

# COPY install-plugins.sh /usr/local/bin/install-plugins.sh
# COPY plugins.txt ${JENKINS_CONFIG_HOME}/plugins.txt

# RUN chown ${user}:${group} /usr/local/bin/install-plugins.sh ${JENKINS_CONFIG_HOME}/plugins.txt \
#     && chmod +x /usr/local/bin/install-plugins.sh

# USER ${user}

# RUN /usr/local/bin/install-plugins.sh < ${JENKINS_CONFIG_HOME}/plugins.txt

# RUN rm -rf ${JENKINS_CONFIG_HOME}/plugins.txt

COPY --chown=${user}:${group} plugins.txt /usr/share/jenkins/ref/plugins.txt

USER ${user}
RUN jenkins-plugin-cli --plugin-file /usr/share/jenkins/ref/plugins.txt
RUN rm -rf ${JENKINS_CONFIG_HOME}/plugins.txt

USER root

COPY --chown=${user}:${group} jenkins-support /usr/local/bin/jenkins-support
COPY --chown=${user}:${group} jenkins.sh /usr/local/bin/jenkins.sh
RUN chmod +x /usr/local/bin/jenkins.sh

USER ${user}

HEALTHCHECK --interval=30s --timeout=30s --start-period=1m --retries=3 \
    CMD curl -f http://localhost:${http_port}/login || exit 1

ENTRYPOINT ["/usr/local/bin/jenkins.sh"]
